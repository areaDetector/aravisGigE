<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <namespace name="Aravis"
             version="0.2"
             shared-library="libaravis-0.2.so.0"
             c:identifier-prefixes="Arv"
             c:symbol-prefixes="arv">
    <enumeration name="AcquisitionMode"
                 glib:type-name="ArvAcquisitionMode"
                 glib:get-type="arv_acquisition_mode_get_type"
                 c:type="ArvAcquisitionMode">
      <member name="continuous"
              value="0"
              c:identifier="ARV_ACQUISITION_MODE_CONTINUOUS"
              glib:nick="continuous"/>
      <member name="single_frame"
              value="1"
              c:identifier="ARV_ACQUISITION_MODE_SINGLE_FRAME"
              glib:nick="single-frame"/>
    </enumeration>
    <enumeration name="Auto"
                 glib:type-name="ArvAuto"
                 glib:get-type="arv_auto_get_type"
                 c:type="ArvAuto">
      <member name="off"
              value="0"
              c:identifier="ARV_AUTO_OFF"
              glib:nick="off"/>
      <member name="once"
              value="1"
              c:identifier="ARV_AUTO_ONCE"
              glib:nick="once"/>
      <member name="continuous"
              value="2"
              c:identifier="ARV_AUTO_CONTINUOUS"
              glib:nick="continuous"/>
    </enumeration>
    <class name="Buffer"
           c:symbol-prefix="buffer"
           c:type="ArvBuffer"
           parent="GObject.Object"
           glib:type-name="ArvBuffer"
           glib:get-type="arv_buffer_get_type"
           glib:type-struct="BufferClass">
      <constructor name="new" c:identifier="arv_buffer_new">
        <doc xml:whitespace="preserve">Creates a new buffer for the storage of the video stream images. 
The data space can be either preallocated, and the caller is responsible
for it's deallocation, or allocated by this function. If it is the case,
data memory will be freed when the buffer is destroyed.</doc>
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <doc xml:whitespace="preserve">payload size</doc>
            <type name="gulong" c:type="size_t"/>
          </parameter>
          <parameter name="preallocated"
                     transfer-ownership="none"
                     allow-none="1">
            <doc xml:whitespace="preserve">preallocated memory buffer</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_full" c:identifier="arv_buffer_new_full">
        <doc xml:whitespace="preserve">Creates a new buffer for the storage of the video stream images. 
The data space can be either preallocated, and the caller is responsible
for it's deallocation, or allocated by this function. If it is the case,
data memory will be freed when the buffer is destroyed.
If @user_data_destroy_func is non NULL, it will be called in order to destroy
user_data when the buffer is destroyed.</doc>
        <return-value transfer-ownership="full">
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <doc xml:whitespace="preserve">payload size</doc>
            <type name="gulong" c:type="size_t"/>
          </parameter>
          <parameter name="preallocated"
                     transfer-ownership="none"
                     allow-none="1">
            <doc xml:whitespace="preserve">preallocated memory buffer</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <doc xml:whitespace="preserve">a pointer to user data associated to this buffer</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="user_data_destroy_func"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:whitespace="preserve">an optional user data destroy callback</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="size">
        <type name="gulong" c:type="size_t"/>
      </field>
      <field name="is_preallocated">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="data">
        <type name="gpointer" c:type="void*"/>
      </field>
      <field name="user_data">
        <type name="gpointer" c:type="void*"/>
      </field>
      <field name="user_data_destroy_func">
        <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
      </field>
      <field name="status">
        <type name="BufferStatus" c:type="ArvBufferStatus"/>
      </field>
      <field name="frame_id">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="timestamp_ns">
        <type name="guint64" c:type="guint64"/>
      </field>
      <field name="x_offset">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="y_offset">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="width">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="height">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="pixel_format">
        <type name="PixelFormat" c:type="ArvPixelFormat"/>
      </field>
    </class>
    <record name="BufferClass"
            c:type="ArvBufferClass"
            glib:is-gtype-struct-for="Buffer">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="BufferStatus"
                 glib:type-name="ArvBufferStatus"
                 glib:get-type="arv_buffer_status_get_type"
                 c:type="ArvBufferStatus">
      <member name="success"
              value="0"
              c:identifier="ARV_BUFFER_STATUS_SUCCESS"
              glib:nick="success"/>
      <member name="cleared"
              value="1"
              c:identifier="ARV_BUFFER_STATUS_CLEARED"
              glib:nick="cleared"/>
      <member name="timeout"
              value="2"
              c:identifier="ARV_BUFFER_STATUS_TIMEOUT"
              glib:nick="timeout"/>
      <member name="missing_packets"
              value="3"
              c:identifier="ARV_BUFFER_STATUS_MISSING_PACKETS"
              glib:nick="missing-packets"/>
      <member name="wrong_packet_id"
              value="4"
              c:identifier="ARV_BUFFER_STATUS_WRONG_PACKET_ID"
              glib:nick="wrong-packet-id"/>
      <member name="size_mismatch"
              value="5"
              c:identifier="ARV_BUFFER_STATUS_SIZE_MISMATCH"
              glib:nick="size-mismatch"/>
      <member name="filling"
              value="6"
              c:identifier="ARV_BUFFER_STATUS_FILLING"
              glib:nick="filling"/>
      <member name="aborted"
              value="7"
              c:identifier="ARV_BUFFER_STATUS_ABORTED"
              glib:nick="aborted"/>
    </enumeration>
    <class name="Camera"
           c:symbol-prefix="camera"
           c:type="ArvCamera"
           parent="GObject.Object"
           glib:type-name="ArvCamera"
           glib:get-type="arv_camera_get_type"
           glib:type-struct="CameraClass">
      <doc xml:whitespace="preserve">#ArvCamera is a class for the generic control of cameras. It hides the
complexity of the genicam interface by providing a simple API, with the
drawback of not exposing all the available features. See #ArvDevice and
#ArvGc for a more advanced use of the Aravis library.</doc>
      <constructor name="new" c:identifier="arv_camera_new">
        <doc xml:whitespace="preserve">Creates a new #ArvCamera. If @name is null, it will instantiate the
first available camera.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #ArvCamera.</doc>
          <type name="Camera" c:type="ArvCamera*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">name of the camera.</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="create_stream" c:identifier="arv_camera_create_stream">
        <doc xml:whitespace="preserve">Creates a new #ArvStream for video stream handling. See
#ArvStreamCallback for details regarding the callback function.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #ArvStream.</doc>
          <type name="Stream" c:type="ArvStream*"/>
        </return-value>
        <parameters>
          <parameter name="callback"
                     transfer-ownership="none"
                     allow-none="1"
                     scope="call"
                     closure="1">
            <doc xml:whitespace="preserve">a frame processing callback</doc>
            <type name="StreamCallback" c:type="ArvStreamCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">user data for @callback</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_acquisition_mode"
              c:identifier="arv_camera_get_acquisition_mode">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">acquisition mode.</doc>
          <type name="AcquisitionMode" c:type="ArvAcquisitionMode"/>
        </return-value>
      </method>
      <method name="get_available_pixel_formats"
              c:identifier="arv_camera_get_available_pixel_formats">
        <doc xml:whitespace="preserve">Retrieves the list of all available pixel formats.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a newly allocated array of #ArvPixelFormat</doc>
          <array length="0" c:type="gint64*">
            <type name="gint64" c:type="gint64"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="n_pixel_formats"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">number of different pixel formats</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_binning" c:identifier="arv_camera_get_binning">
        <doc xml:whitespace="preserve">Retrieves binning in both directions.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="dx"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">horizontal binning placeholder</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="dy"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">vertical binning placeholder</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device" c:identifier="arv_camera_get_device">
        <doc xml:whitespace="preserve">Retrieves the #ArvDevice object for more complete access to camera features.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">underlying device object.</doc>
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
      </method>
      <method name="get_device_id" c:identifier="arv_camera_get_device_id">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the camera device ID.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_exposure_time"
              c:identifier="arv_camera_get_exposure_time">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">current exposure time, in µs.</doc>
          <type name="gdouble" c:type="double"/>
        </return-value>
      </method>
      <method name="get_exposure_time_auto"
              c:identifier="arv_camera_get_exposure_time_auto">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">auto exposure mode selection</doc>
          <type name="Auto" c:type="ArvAuto"/>
        </return-value>
      </method>
      <method name="get_exposure_time_bounds"
              c:identifier="arv_camera_get_exposure_time_bounds">
        <doc xml:whitespace="preserve">Retrieves exposure time bounds, in µs.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">minimum exposure time</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">maximum exposure time</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_frame_rate" c:identifier="arv_camera_get_frame_rate">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">actual frame rate, in Hz.</doc>
          <type name="gdouble" c:type="double"/>
        </return-value>
      </method>
      <method name="get_gain" c:identifier="arv_camera_get_gain">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the current gain setting.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_gain_auto" c:identifier="arv_camera_get_gain_auto">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">auto gain mode selection</doc>
          <type name="Auto" c:type="ArvAuto"/>
        </return-value>
      </method>
      <method name="get_gain_bounds" c:identifier="arv_camera_get_gain_bounds">
        <doc xml:whitespace="preserve">Retrieves gain bounds.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">minimum gain</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">maximum gain</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_height_bounds"
              c:identifier="arv_camera_get_height_bounds">
        <doc xml:whitespace="preserve">Retrieves the valid range for image height.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">minimum height</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">maximum height</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_model_name" c:identifier="arv_camera_get_model_name">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the camera model name.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_payload" c:identifier="arv_camera_get_payload">
        <doc xml:whitespace="preserve">Retrieves the size needed for the storage of an image. This value is used
for the creation of the stream buffers.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">frame storage size, in bytes.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
      </method>
      <method name="get_pixel_format"
              c:identifier="arv_camera_get_pixel_format">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">pixel format.</doc>
          <type name="PixelFormat" c:type="ArvPixelFormat"/>
        </return-value>
      </method>
      <method name="get_region" c:identifier="arv_camera_get_region">
        <doc xml:whitespace="preserve">Retrieves the current region of interest.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">x offset</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">y_offset</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">region width</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">region height</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sensor_size" c:identifier="arv_camera_get_sensor_size">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">camera sensor width</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">camera sensor height</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_vendor_name" c:identifier="arv_camera_get_vendor_name">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the camera vendor name.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_width_bounds"
              c:identifier="arv_camera_get_width_bounds">
        <doc xml:whitespace="preserve">Retrieves the valid range for image width.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="min"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">minimum width</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="max"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:whitespace="preserve">maximum width</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_acquisition_mode"
              c:identifier="arv_camera_set_acquisition_mode">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="AcquisitionMode" c:type="ArvAcquisitionMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_binning" c:identifier="arv_camera_set_binning">
        <doc xml:whitespace="preserve">Defines binning in both directions. Not all cameras support this
feature.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="dx" transfer-ownership="none">
            <doc xml:whitespace="preserve">horizontal binning</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="dy" transfer-ownership="none">
            <doc xml:whitespace="preserve">vertical binning</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_exposure_time"
              c:identifier="arv_camera_set_exposure_time">
        <doc xml:whitespace="preserve">Sets exposure time. User should take care to set a value compatible with
the desired frame rate.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="exposure_time_us" transfer-ownership="none">
            <doc xml:whitespace="preserve">exposure time, in µs</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_exposure_time_auto"
              c:identifier="arv_camera_set_exposure_time_auto">
        <doc xml:whitespace="preserve">Configures automatic exposure feature.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="auto_mode" transfer-ownership="none">
            <doc xml:whitespace="preserve">auto exposure mode selection</doc>
            <type name="Auto" c:type="ArvAuto"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_frame_rate" c:identifier="arv_camera_set_frame_rate">
        <doc xml:whitespace="preserve">Configures a fixed frame rate mode. Once acquisition start is triggered, the
video stream will be acquired with the given frame rate.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="frame_rate" transfer-ownership="none">
            <doc xml:whitespace="preserve">frame rate, in Hz</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_gain" c:identifier="arv_camera_set_gain">
        <doc xml:whitespace="preserve">Sets the gain of the ADC converter.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="gain" transfer-ownership="none">
            <doc xml:whitespace="preserve">gain value</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_gain_auto" c:identifier="arv_camera_set_gain_auto">
        <doc xml:whitespace="preserve">Configures automatic gain feature.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="auto_mode" transfer-ownership="none">
            <doc xml:whitespace="preserve">auto gaine mode selection</doc>
            <type name="Auto" c:type="ArvAuto"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pixel_format"
              c:identifier="arv_camera_set_pixel_format">
        <doc xml:whitespace="preserve">Defines pixel format.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <doc xml:whitespace="preserve">pixel format</doc>
            <type name="PixelFormat" c:type="ArvPixelFormat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_region" c:identifier="arv_camera_set_region">
        <doc xml:whitespace="preserve">Defines the region of interest which will be transmitted in the video
stream.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="x" transfer-ownership="none">
            <doc xml:whitespace="preserve">x offset</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:whitespace="preserve">y_offset</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:whitespace="preserve">region width</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:whitespace="preserve">region height</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_software_trigger"
              c:identifier="arv_camera_set_software_trigger">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_trigger" c:identifier="arv_camera_set_trigger">
        <doc xml:whitespace="preserve">Configures the camera in trigger mode. Typical values for source are "Line1"
or "Line2". See the camera documentation for the allowed values.
Activation is set to rising edge. It can be changed by accessing the
underlying device object.
Source can also be "Software". In this case, an acquisition is triggered
by a call to @arv_camera_software_trigger.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <doc xml:whitespace="preserve">trigger source as string</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="software_trigger"
              c:identifier="arv_camera_software_trigger">
        <doc xml:whitespace="preserve">Sends a software trigger command to @camera. The camera must be previously
configured to use a software trigger, using @arv_camera_set_trigger.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="start_acquisition"
              c:identifier="arv_camera_start_acquisition">
        <doc xml:whitespace="preserve">Starts video stream acquisition.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="stop_acquisition"
              c:identifier="arv_camera_stop_acquisition">
        <doc xml:whitespace="preserve">Stops video stream acquisition.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="CameraPrivate" c:type="ArvCameraPrivate*"/>
      </field>
    </class>
    <record name="CameraClass"
            c:type="ArvCameraClass"
            glib:is-gtype-struct-for="Camera">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="CameraPrivate" c:type="ArvCameraPrivate" disguised="1">
    </record>
    <record name="DebugCategory" c:type="ArvDebugCategory">
      <field name="name" writable="1">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="level" writable="1">
        <type name="DebugLevel" c:type="ArvDebugLevel"/>
      </field>
    </record>
    <enumeration name="DebugLevel"
                 glib:type-name="ArvDebugLevel"
                 glib:get-type="arv_debug_level_get_type"
                 c:type="ArvDebugLevel">
      <member name="none"
              value="0"
              c:identifier="ARV_DEBUG_LEVEL_NONE"
              glib:nick="none"/>
      <member name="warning"
              value="1"
              c:identifier="ARV_DEBUG_LEVEL_WARNING"
              glib:nick="warning"/>
      <member name="debug"
              value="2"
              c:identifier="ARV_DEBUG_LEVEL_DEBUG"
              glib:nick="debug"/>
      <member name="log"
              value="3"
              c:identifier="ARV_DEBUG_LEVEL_LOG"
              glib:nick="log"/>
      <member name="count"
              value="4"
              c:identifier="ARV_DEBUG_LEVEL_COUNT"
              glib:nick="count"/>
    </enumeration>
    <class name="Device"
           c:symbol-prefix="device"
           c:type="ArvDevice"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ArvDevice"
           glib:get-type="arv_device_get_type"
           glib:type-struct="DeviceClass">
      <virtual-method name="control_lost">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <virtual-method name="create_stream" invoker="create_stream">
        <doc xml:whitespace="preserve">Creates a new #ArvStream for video stream handling. See</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #ArvStream.</doc>
          <type name="Stream" c:type="ArvStream*"/>
        </return-value>
        <parameters>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:whitespace="preserve">a frame processing callback</doc>
            <type name="StreamCallback" c:type="ArvStreamCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="1">
            <doc xml:whitespace="preserve">(closure) user data for @callback</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_genicam" invoker="get_genicam">
        <doc xml:whitespace="preserve">Retrieves the genicam interface of the given device.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the genicam interface.</doc>
          <type name="Gc" c:type="ArvGc*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_genicam_xml" invoker="get_genicam_xml">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="gulong" c:type="size_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="read_memory" invoker="read_memory">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="read_register" invoker="read_register">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="write_memory" invoker="write_memory">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="write_register" invoker="write_register">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="create_stream" c:identifier="arv_device_create_stream">
        <doc xml:whitespace="preserve">Creates a new #ArvStream for video stream handling. See</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #ArvStream.</doc>
          <type name="Stream" c:type="ArvStream*"/>
        </return-value>
        <parameters>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:whitespace="preserve">a frame processing callback</doc>
            <type name="StreamCallback" c:type="ArvStreamCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <doc xml:whitespace="preserve">(closure) user data for @callback</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="emit_control_lost_signal"
              c:identifier="arv_device_emit_control_lost_signal">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="execute_command" c:identifier="arv_device_execute_command">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="feature" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_feature" c:identifier="arv_device_get_feature">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the genicam node corresponding to the feature name, NULL if not found.</doc>
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
        <parameters>
          <parameter name="feature" transfer-ownership="none">
            <doc xml:whitespace="preserve">a feature name</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_float_feature_bounds"
              c:identifier="arv_device_get_float_feature_bounds">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="feature" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="min" transfer-ownership="none">
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="max" transfer-ownership="none">
            <type name="gdouble" c:type="double*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_float_feature_value"
              c:identifier="arv_device_get_float_feature_value">
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <parameter name="feature" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_genicam" c:identifier="arv_device_get_genicam">
        <doc xml:whitespace="preserve">Retrieves the genicam interface of the given device.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the genicam interface.</doc>
          <type name="Gc" c:type="ArvGc*"/>
        </return-value>
      </method>
      <method name="get_genicam_xml" c:identifier="arv_device_get_genicam_xml">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="gulong" c:type="size_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_integer_feature_bounds"
              c:identifier="arv_device_get_integer_feature_bounds">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="feature" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="min" transfer-ownership="none">
            <type name="gint64" c:type="gint64*"/>
          </parameter>
          <parameter name="max" transfer-ownership="none">
            <type name="gint64" c:type="gint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_integer_feature_value"
              c:identifier="arv_device_get_integer_feature_value">
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <parameter name="feature" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_string_feature_value"
              c:identifier="arv_device_get_string_feature_value">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="feature" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_memory" c:identifier="arv_device_read_memory">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_register" c:identifier="arv_device_read_register">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_float_feature_value"
              c:identifier="arv_device_set_float_feature_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="feature" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_integer_feature_value"
              c:identifier="arv_device_set_integer_feature_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="feature" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_string_feature_value"
              c:identifier="arv_device_set_string_feature_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="feature" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_memory" c:identifier="arv_device_write_memory">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_register" c:identifier="arv_device_write_register">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="control-lost">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="DeviceClass"
            c:type="ArvDeviceClass"
            glib:is-gtype-struct-for="Device">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="create_stream">
        <callback name="create_stream">
          <return-value transfer-ownership="full">
            <doc xml:whitespace="preserve">a new #ArvStream.</doc>
            <type name="Stream" c:type="ArvStream*"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
            <parameter name="callback"
                       transfer-ownership="none"
                       scope="call"
                       closure="2">
              <doc xml:whitespace="preserve">a frame processing callback</doc>
              <type name="StreamCallback" c:type="ArvStreamCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="2">
              <doc xml:whitespace="preserve">(closure) user data for @callback</doc>
              <type name="gpointer" c:type="void*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_genicam_xml">
        <callback name="get_genicam_xml">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type name="gulong" c:type="size_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_genicam">
        <callback name="get_genicam">
          <return-value transfer-ownership="none">
            <doc xml:whitespace="preserve">the genicam interface.</doc>
            <type name="Gc" c:type="ArvGc*"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="read_memory">
        <callback name="read_memory">
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="gpointer" c:type="void*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="write_memory">
        <callback name="write_memory">
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="gpointer" c:type="void*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="read_register">
        <callback name="read_register">
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="guint32" c:type="guint32*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="write_register">
        <callback name="write_register">
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="guint32" c:type="guint32"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="control_lost">
        <callback name="control_lost">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <type name="Device" c:type="ArvDevice*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="Evaluator"
           c:symbol-prefix="evaluator"
           c:type="ArvEvaluator"
           parent="GObject.Object"
           glib:type-name="ArvEvaluator"
           glib:get-type="arv_evaluator_get_type"
           glib:type-struct="EvaluatorClass">
      <constructor name="new" c:identifier="arv_evaluator_new">
        <doc xml:whitespace="preserve">Creates a new #ArvEvaluator object. The syntax is described in the genicam standard specification.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #ArvEvaluator object.</doc>
          <type name="Evaluator" c:type="ArvEvaluator*"/>
        </return-value>
        <parameters>
          <parameter name="expression"
                     transfer-ownership="none"
                     allow-none="1">
            <doc xml:whitespace="preserve">an evaluator expression</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="evaluate_as_double"
              c:identifier="arv_evaluator_evaluate_as_double"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
      </method>
      <method name="evaluate_as_int64"
              c:identifier="arv_evaluator_evaluate_as_int64"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
      </method>
      <method name="get_expression"
              c:identifier="arv_evaluator_get_expression">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="set_double_variable"
              c:identifier="arv_evaluator_set_double_variable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="v_double" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_expression"
              c:identifier="arv_evaluator_set_expression">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="expression" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_int64_variable"
              c:identifier="arv_evaluator_set_int64_variable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="v_int64" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="EvaluatorPrivate" c:type="ArvEvaluatorPrivate*"/>
      </field>
    </class>
    <record name="EvaluatorClass"
            c:type="ArvEvaluatorClass"
            glib:is-gtype-struct-for="Evaluator">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="EvaluatorPrivate" c:type="ArvEvaluatorPrivate" disguised="1">
    </record>
    <constant name="FAKE_CAMERA_ACQUISITION_FRAME_RATE_DEFAULT"
              value="25.000000">
      <type name="gdouble" c:type="gdouble"/>
    </constant>
    <constant name="FAKE_CAMERA_BINNING_HORIZONTAL_DEFAULT" value="1">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_BINNING_VERTICAL_DEFAULT" value="1">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_EXPOSURE_TIME_US_DEFAULT" value="10000.000000">
      <type name="gdouble" c:type="gdouble"/>
    </constant>
    <constant name="FAKE_CAMERA_HEIGHT_DEFAULT" value="512">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_MEMORY_SIZE" value="65536">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_ACQUISITION" value="292">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_ACQUISITION_FRAME_PERIOD_US"
              value="312">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_ACQUISITION_MODE" value="300">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_ACQUISITION_START_OFFSET" value="32">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_BINNING_HORIZONTAL" value="264">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_BINNING_VERTICAL" value="268">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_EXPOSURE_TIME_US" value="288">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_FRAME_START_OFFSET" value="0">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_GAIN_MODE" value="276">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_GAIN_RAW" value="272">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_HEIGHT" value="260">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_PIXEL_FORMAT" value="296">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_SENSOR_HEIGHT" value="280">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_SENSOR_WIDTH" value="284">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_TEST" value="496">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_TRIGGER_ACTIVATION" value="776">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_TRIGGER_MODE" value="768">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_TRIGGER_SOURCE" value="772">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_WIDTH" value="256">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_X_OFFSET" value="304">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_REGISTER_Y_OFFSET" value="308">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_SENSOR_HEIGHT" value="2048">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_SENSOR_WIDTH" value="2048">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_TEST_REGISTER_DEFAULT" value="305419896">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_CAMERA_WIDTH_DEFAULT" value="512">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_DEVICE_ID" value="Fake_1">
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="FAKE_INTERFACE_DISCOVERY_TIMEOUT_MS" value="1000">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="FAKE_INTERFACE_SOCKET_BUFFER_SIZE" value="1024">
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="FakeCamera"
           c:symbol-prefix="fake_camera"
           c:type="ArvFakeCamera"
           parent="GObject.Object"
           glib:type-name="ArvFakeCamera"
           glib:get-type="arv_fake_camera_get_type"
           glib:type-struct="FakeCameraClass">
      <constructor name="new" c:identifier="arv_fake_camera_new">
        <return-value transfer-ownership="full">
          <type name="FakeCamera" c:type="ArvFakeCamera*"/>
        </return-value>
        <parameters>
          <parameter name="serial_number" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="fill_buffer" c:identifier="arv_fake_camera_fill_buffer">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="ArvBuffer*"/>
          </parameter>
          <parameter name="packet_size" transfer-ownership="none">
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_acquisition_status"
              c:identifier="arv_fake_camera_get_acquisition_status">
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="get_control_channel_privilege"
              c:identifier="arv_fake_camera_get_control_channel_privilege">
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="get_heartbeat_timeout"
              c:identifier="arv_fake_camera_get_heartbeat_timeout">
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="get_payload" c:identifier="arv_fake_camera_get_payload">
        <return-value transfer-ownership="none">
          <type name="gulong" c:type="size_t"/>
        </return-value>
      </method>
      <method name="get_stream_address"
              c:identifier="arv_fake_camera_get_stream_address">
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">the data stream #GSocketAddress for this camera</doc>
          <type name="Gio.SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
      </method>
      <method name="read_memory" c:identifier="arv_fake_camera_read_memory">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_register"
              c:identifier="arv_fake_camera_read_register">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_control_channel_privilege"
              c:identifier="arv_fake_camera_set_control_channel_privilege">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="privilege" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_fill_pattern"
              c:identifier="arv_fake_camera_set_fill_pattern">
        <doc xml:whitespace="preserve">Sets the fill pattern callback for custom test images.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="fill_pattern_callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:whitespace="preserve">callback for image filling</doc>
            <type name="FakeCameraFillPattern"
                  c:type="ArvFakeCameraFillPattern"/>
          </parameter>
          <parameter name="fill_pattern_data" transfer-ownership="none">
            <doc xml:whitespace="preserve">image filling user data</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_inet_address"
              c:identifier="arv_fake_camera_set_inet_address">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="Gio.InetAddress" c:type="GInetAddress*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_trigger_frequency"
              c:identifier="arv_fake_camera_set_trigger_frequency">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="frequency" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="wait_for_next_frame"
              c:identifier="arv_fake_camera_wait_for_next_frame">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="write_memory" c:identifier="arv_fake_camera_write_memory">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_register"
              c:identifier="arv_fake_camera_write_register">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="FakeCameraPrivate" c:type="ArvFakeCameraPrivate*"/>
      </field>
    </class>
    <record name="FakeCameraClass"
            c:type="ArvFakeCameraClass"
            glib:is-gtype-struct-for="FakeCamera">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <callback name="FakeCameraFillPattern" c:type="ArvFakeCameraFillPattern">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <type name="Buffer" c:type="ArvBuffer*"/>
        </parameter>
        <parameter name="fill_pattern_data" transfer-ownership="none">
          <type name="gpointer" c:type="void*"/>
        </parameter>
        <parameter name="exposure_time_us" transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </parameter>
        <parameter name="gain" transfer-ownership="none">
          <type name="guint32" c:type="guint32"/>
        </parameter>
        <parameter name="pixel_format" transfer-ownership="none">
          <type name="PixelFormat" c:type="ArvPixelFormat"/>
        </parameter>
      </parameters>
    </callback>
    <record name="FakeCameraPrivate"
            c:type="ArvFakeCameraPrivate"
            disguised="1">
    </record>
    <class name="FakeDevice"
           c:symbol-prefix="fake_device"
           c:type="ArvFakeDevice"
           parent="Device"
           glib:type-name="ArvFakeDevice"
           glib:get-type="arv_fake_device_get_type"
           glib:type-struct="FakeDeviceClass">
      <constructor name="new" c:identifier="arv_fake_device_new">
        <return-value transfer-ownership="full">
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
        <parameters>
          <parameter name="serial_number" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_fake_camera"
              c:identifier="arv_fake_device_get_fake_camera">
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the #ArvFakeCamera used by this device instance.</doc>
          <type name="FakeCamera" c:type="ArvFakeCamera*"/>
        </return-value>
      </method>
      <field name="device">
        <type name="Device" c:type="ArvDevice"/>
      </field>
      <field name="priv">
        <type name="FakeDevicePrivate" c:type="ArvFakeDevicePrivate*"/>
      </field>
    </class>
    <record name="FakeDeviceClass"
            c:type="ArvFakeDeviceClass"
            glib:is-gtype-struct-for="FakeDevice">
      <field name="parent_class">
        <type name="DeviceClass" c:type="ArvDeviceClass"/>
      </field>
    </record>
    <record name="FakeDevicePrivate"
            c:type="ArvFakeDevicePrivate"
            disguised="1">
    </record>
    <class name="FakeInterface"
           c:symbol-prefix="fake_interface"
           c:type="ArvFakeInterface"
           parent="Interface"
           glib:type-name="ArvFakeInterface"
           glib:get-type="arv_fake_interface_get_type"
           glib:type-struct="FakeInterfaceClass">
      <function name="destroy_instance"
                c:identifier="arv_fake_interface_destroy_instance">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="get_instance"
                c:identifier="arv_fake_interface_get_instance">
        <doc xml:whitespace="preserve">Gets the unique instance of the fake interface.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #ArvInterface singleton.</doc>
          <type name="Interface" c:type="ArvInterface*"/>
        </return-value>
      </function>
      <field name="interface">
        <type name="Interface" c:type="ArvInterface"/>
      </field>
      <field name="priv">
        <type name="FakeInterfacePrivate" c:type="ArvFakeInterfacePrivate*"/>
      </field>
    </class>
    <record name="FakeInterfaceClass"
            c:type="ArvFakeInterfaceClass"
            glib:is-gtype-struct-for="FakeInterface">
      <field name="parent_class">
        <type name="InterfaceClass" c:type="ArvInterfaceClass"/>
      </field>
    </record>
    <record name="FakeInterfacePrivate"
            c:type="ArvFakeInterfacePrivate"
            disguised="1">
    </record>
    <class name="FakeStream"
           c:symbol-prefix="fake_stream"
           c:type="ArvFakeStream"
           parent="Stream"
           glib:type-name="ArvFakeStream"
           glib:get-type="arv_fake_stream_get_type"
           glib:type-struct="FakeStreamClass">
      <constructor name="new"
                   c:identifier="arv_fake_stream_new"
                   introspectable="0">
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #ArvStream.</doc>
          <type name="Stream" c:type="ArvStream*"/>
        </return-value>
        <parameters>
          <parameter name="camera" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #ArvFakeCamera</doc>
            <type name="FakeCamera" c:type="ArvFakeCamera*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="2">
            <doc xml:whitespace="preserve">image processing callback</doc>
            <type name="StreamCallback" c:type="ArvStreamCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <doc xml:whitespace="preserve">user data for @callback</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </constructor>
      <field name="stream">
        <type name="Stream" c:type="ArvStream"/>
      </field>
      <field name="priv">
        <type name="FakeStreamPrivate" c:type="ArvFakeStreamPrivate*"/>
      </field>
    </class>
    <record name="FakeStreamClass"
            c:type="ArvFakeStreamClass"
            glib:is-gtype-struct-for="FakeStream">
      <field name="parent_class">
        <type name="StreamClass" c:type="ArvStreamClass"/>
      </field>
    </record>
    <record name="FakeStreamPrivate"
            c:type="ArvFakeStreamPrivate"
            disguised="1">
    </record>
    <callback name="FrameCallback" c:type="ArvFrameCallback">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="buffer" transfer-ownership="none">
          <type name="Buffer" c:type="ArvBuffer*"/>
        </parameter>
      </parameters>
    </callback>
    <constant name="GV_DEVICE_BUFFER_SIZE" value="1024">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GV_DEVICE_GVCP_N_RETRIES_DEFAULT" value="5">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GV_DEVICE_GVCP_TIMEOUT_MS_DEFAULT" value="500">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GV_DEVICE_GVSP_PACKET_SIZE_DEFAULT" value="1500">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GV_DEVICE_HEARTBEAT_PERIOD_US" value="1000000">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GV_DEVICE_HEARTBEAT_RETRY_DELAY_US" value="10000">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GV_DEVICE_HEARTBEAT_RETRY_TIMEOUT_S" value="5.000000">
      <type name="gdouble" c:type="gdouble"/>
    </constant>
    <constant name="GV_INTERFACE_DISCOVERY_TIMEOUT_MS" value="1000">
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="GV_INTERFACE_SOCKET_BUFFER_SIZE" value="1024">
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="Gc"
           c:symbol-prefix="gc"
           c:type="ArvGc"
           parent="GObject.Object"
           glib:type-name="ArvGc"
           glib:get-type="arv_gc_get_type"
           glib:type-struct="GcClass">
      <doc xml:whitespace="preserve">#ArvGc implements the root document for the storage of the Genicam feature
nodes. It builds the node tree by parsing an xml file in the Genicam
standard format. See http://www.genicam.org.</doc>
      <constructor name="new" c:identifier="arv_gc_new">
        <return-value transfer-ownership="full">
          <type name="Gc" c:type="ArvGc*"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <type name="Device" c:type="ArvDevice*"/>
          </parameter>
          <parameter name="xml" transfer-ownership="none">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gulong" c:type="size_t"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_device" c:identifier="arv_gc_get_device">
        <doc xml:whitespace="preserve">Retrieves the device handled by this genicam interface. The device is used for register access.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #ArvDevice.</doc>
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
      </method>
      <method name="get_double_from_value"
              c:identifier="arv_gc_get_double_from_value">
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_int64_from_value"
              c:identifier="arv_gc_get_int64_from_value">
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_node" c:identifier="arv_gc_get_node">
        <doc xml:whitespace="preserve">Retrieves a genicam node by name.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #ArvGcNode, null if not found.</doc>
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:whitespace="preserve">node name</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_double_to_value"
              c:identifier="arv_gc_set_double_to_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="v_double" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_int64_to_value"
              c:identifier="arv_gc_set_int64_to_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="v_int64" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="nodes">
        <type name="GLib.HashTable" c:type="GHashTable*">
          <type name="gpointer" c:type="gpointer"/>
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="device">
        <type name="Device" c:type="ArvDevice*"/>
      </field>
    </class>
    <enumeration name="GcAccessMode"
                 glib:type-name="ArvGcAccessMode"
                 glib:get-type="arv_gc_access_mode_get_type"
                 c:type="ArvGcAccessMode">
      <member name="ro"
              value="0"
              c:identifier="ARV_GC_ACCESS_MODE_RO"
              glib:nick="ro"/>
      <member name="wo"
              value="1"
              c:identifier="ARV_GC_ACCESS_MODE_WO"
              glib:nick="wo"/>
      <member name="rw"
              value="2"
              c:identifier="ARV_GC_ACCESS_MODE_RW"
              glib:nick="rw"/>
    </enumeration>
    <class name="GcBoolean"
           c:symbol-prefix="gc_boolean"
           c:type="ArvGcBoolean"
           parent="GcNode"
           glib:type-name="ArvGcBoolean"
           glib:get-type="arv_gc_boolean_get_type"
           glib:type-struct="GcBooleanClass">
      <constructor name="new" c:identifier="arv_gc_boolean_new">
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_value" c:identifier="arv_gc_boolean_get_value">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_value" c:identifier="arv_gc_boolean_set_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="v_boolean" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="node">
        <type name="GcNode" c:type="ArvGcNode"/>
      </field>
      <field name="value">
        <type name="GObject.Value" c:type="GValue"/>
      </field>
      <field name="on_value">
        <type name="gint64" c:type="gint64"/>
      </field>
      <field name="off_value">
        <type name="gint64" c:type="gint64"/>
      </field>
    </class>
    <record name="GcBooleanClass"
            c:type="ArvGcBooleanClass"
            glib:is-gtype-struct-for="GcBoolean">
      <field name="parent_class">
        <type name="GcNodeClass" c:type="ArvGcNodeClass"/>
      </field>
    </record>
    <enumeration name="GcCachable"
                 glib:type-name="ArvGcCachable"
                 glib:get-type="arv_gc_cachable_get_type"
                 c:type="ArvGcCachable">
      <member name="no_cache"
              value="0"
              c:identifier="ARV_GC_CACHABLE_NO_CACHE"
              glib:nick="no-cache"/>
      <member name="write_trhough"
              value="1"
              c:identifier="ARV_GC_CACHABLE_WRITE_TRHOUGH"
              glib:nick="write-trhough"/>
      <member name="write_around"
              value="2"
              c:identifier="ARV_GC_CACHABLE_WRITE_AROUND"
              glib:nick="write-around"/>
    </enumeration>
    <class name="GcCategory"
           c:symbol-prefix="gc_category"
           c:type="ArvGcCategory"
           parent="GcNode"
           glib:type-name="ArvGcCategory"
           glib:get-type="arv_gc_category_get_type"
           glib:type-struct="GcCategoryClass">
      <constructor name="new" c:identifier="arv_gc_category_new">
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_features" c:identifier="arv_gc_category_get_features">
        <doc xml:whitespace="preserve">Get a list of strings with the name of the features listed in the given category node.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a list of strings.</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <field name="node">
        <type name="GcNode" c:type="ArvGcNode"/>
      </field>
      <field name="features">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
    </class>
    <record name="GcCategoryClass"
            c:type="ArvGcCategoryClass"
            glib:is-gtype-struct-for="GcCategory">
      <field name="parent_class">
        <type name="GcNodeClass" c:type="ArvGcNodeClass"/>
      </field>
    </record>
    <record name="GcClass" c:type="ArvGcClass" glib:is-gtype-struct-for="Gc">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="GcCommand"
           c:symbol-prefix="gc_command"
           c:type="ArvGcCommand"
           parent="GcNode"
           glib:type-name="ArvGcCommand"
           glib:get-type="arv_gc_command_get_type"
           glib:type-struct="GcCommandClass">
      <constructor name="new" c:identifier="arv_gc_command_new">
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="execute" c:identifier="arv_gc_command_execute">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <field name="node">
        <type name="GcNode" c:type="ArvGcNode"/>
      </field>
      <field name="command_value">
        <type name="GObject.Value" c:type="GValue"/>
      </field>
      <field name="value">
        <type name="GObject.Value" c:type="GValue"/>
      </field>
    </class>
    <record name="GcCommandClass"
            c:type="ArvGcCommandClass"
            glib:is-gtype-struct-for="GcCommand">
      <field name="parent_class">
        <type name="GcNodeClass" c:type="ArvGcNodeClass"/>
      </field>
    </record>
    <class name="GcConverter"
           c:symbol-prefix="gc_converter"
           c:type="ArvGcConverter"
           parent="GcNode"
           glib:type-name="ArvGcConverter"
           glib:get-type="arv_gc_converter_get_type"
           glib:type-struct="GcConverterClass">
      <implements name="GcFloat"/>
      <implements name="GcInteger"/>
      <constructor name="new" c:identifier="arv_gc_converter_new">
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_integer"
                   c:identifier="arv_gc_converter_new_integer">
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <field name="node">
        <type name="GcNode" c:type="ArvGcNode"/>
      </field>
      <field name="value_type">
        <type name="GType" c:type="GType"/>
      </field>
      <field name="value">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="variables">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="formula_to">
        <type name="Evaluator" c:type="ArvEvaluator*"/>
      </field>
      <field name="formula_from">
        <type name="Evaluator" c:type="ArvEvaluator*"/>
      </field>
    </class>
    <record name="GcConverterClass"
            c:type="ArvGcConverterClass"
            glib:is-gtype-struct-for="GcConverter">
      <field name="parent_class">
        <type name="GcNodeClass" c:type="ArvGcNodeClass"/>
      </field>
    </record>
    <class name="GcEnumEntry"
           c:symbol-prefix="gc_enum_entry"
           c:type="ArvGcEnumEntry"
           parent="GcNode"
           glib:type-name="ArvGcEnumEntry"
           glib:get-type="arv_gc_enum_entry_get_type"
           glib:type-struct="GcEnumEntryClass">
      <constructor name="new" c:identifier="arv_gc_enum_entry_new">
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_value" c:identifier="arv_gc_enum_entry_get_value">
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
      </method>
      <field name="node">
        <type name="GcNode" c:type="ArvGcNode"/>
      </field>
      <field name="value">
        <type name="gint64" c:type="gint64"/>
      </field>
    </class>
    <record name="GcEnumEntryClass"
            c:type="ArvGcEnumEntryClass"
            glib:is-gtype-struct-for="GcEnumEntry">
      <field name="parent_class">
        <type name="GcNodeClass" c:type="ArvGcNodeClass"/>
      </field>
    </record>
    <class name="GcEnumeration"
           c:symbol-prefix="gc_enumeration"
           c:type="ArvGcEnumeration"
           parent="GcNode"
           glib:type-name="ArvGcEnumeration"
           glib:get-type="arv_gc_enumeration_get_type"
           glib:type-struct="GcEnumerationClass">
      <constructor name="new" c:identifier="arv_gc_enumeration_new">
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get_available_int_values"
              c:identifier="arv_gc_enumeration_get_available_int_values">
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64*"/>
        </return-value>
        <parameters>
          <parameter name="n_values" transfer-ownership="none">
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_entries" c:identifier="arv_gc_enumeration_get_entries">
        <return-value transfer-ownership="none">
          <type name="GLib.SList" c:type="GSList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="get_int_value"
              c:identifier="arv_gc_enumeration_get_int_value">
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
      </method>
      <method name="get_string_value"
              c:identifier="arv_gc_enumeration_get_string_value">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="set_int_value"
              c:identifier="arv_gc_enumeration_set_int_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_string_value"
              c:identifier="arv_gc_enumeration_set_string_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="node">
        <type name="GcNode" c:type="ArvGcNode"/>
      </field>
      <field name="value">
        <type name="GObject.Value" c:type="GValue"/>
      </field>
    </class>
    <record name="GcEnumerationClass"
            c:type="ArvGcEnumerationClass"
            glib:is-gtype-struct-for="GcEnumeration">
      <field name="parent_class">
        <type name="GcNodeClass" c:type="ArvGcNodeClass"/>
      </field>
    </record>
    <interface name="GcFloat"
               c:symbol-prefix="gc_float"
               c:type="ArvGcFloat"
               glib:type-name="ArvGcFloat"
               glib:get-type="arv_gc_float_get_type"
               glib:type-struct="GcFloatInterface">
      <virtual-method name="get_inc" invoker="get_inc">
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_max" invoker="get_max">
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_min" invoker="get_min">
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_unit" invoker="get_unit">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_value" invoker="get_value">
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
      </virtual-method>
      <virtual-method name="impose_max" invoker="impose_max">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="maximum" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="impose_min" invoker="impose_min">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="minimum" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_value" invoker="set_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_inc" c:identifier="arv_gc_float_get_inc">
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
      </method>
      <method name="get_max" c:identifier="arv_gc_float_get_max">
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
      </method>
      <method name="get_min" c:identifier="arv_gc_float_get_min">
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
      </method>
      <method name="get_unit" c:identifier="arv_gc_float_get_unit">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_value" c:identifier="arv_gc_float_get_value">
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="double"/>
        </return-value>
      </method>
      <method name="impose_max" c:identifier="arv_gc_float_impose_max">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="maximum" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="impose_min" c:identifier="arv_gc_float_impose_min">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="minimum" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value" c:identifier="arv_gc_float_set_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="GcFloatInterface"
            c:type="ArvGcFloatInterface"
            glib:is-gtype-struct-for="GcFloat">
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_value">
        <callback name="get_value">
          <return-value transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_value">
        <callback name="set_value">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_min">
        <callback name="get_min">
          <return-value transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_max">
        <callback name="get_max">
          <return-value transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_inc">
        <callback name="get_inc">
          <return-value transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_unit">
        <callback name="get_unit">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="impose_min">
        <callback name="impose_min">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
            <parameter name="minimum" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="impose_max">
        <callback name="impose_max">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_float" transfer-ownership="none">
              <type name="GcFloat" c:type="ArvGcFloat*"/>
            </parameter>
            <parameter name="maximum" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="GcFloatNode"
           c:symbol-prefix="gc_float_node"
           c:type="ArvGcFloatNode"
           parent="GcNode"
           glib:type-name="ArvGcFloatNode"
           glib:get-type="arv_gc_float_node_get_type"
           glib:type-struct="GcFloatNodeClass">
      <implements name="GcFloat"/>
      <constructor name="new" c:identifier="arv_gc_float_node_new">
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <field name="node">
        <type name="GcNode" c:type="ArvGcNode"/>
      </field>
      <field name="value">
        <type name="GObject.Value" c:type="GValue"/>
      </field>
      <field name="minimum">
        <type name="GObject.Value" c:type="GValue"/>
      </field>
      <field name="maximum">
        <type name="GObject.Value" c:type="GValue"/>
      </field>
      <field name="increment">
        <type name="GObject.Value" c:type="GValue"/>
      </field>
      <field name="unit">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="v_string">
        <array zero-terminated="0" c:type="gchar" fixed-size="39">
          <type name="gchar" c:type="char"/>
        </array>
      </field>
    </class>
    <record name="GcFloatNodeClass"
            c:type="ArvGcFloatNodeClass"
            glib:is-gtype-struct-for="GcFloatNode">
      <field name="parent_class">
        <type name="GcNodeClass" c:type="ArvGcNodeClass"/>
      </field>
    </record>
    <interface name="GcInteger"
               c:symbol-prefix="gc_integer"
               c:type="ArvGcInteger"
               glib:type-name="ArvGcInteger"
               glib:get-type="arv_gc_integer_get_type"
               glib:type-struct="GcIntegerInterface">
      <virtual-method name="get_inc" invoker="get_inc">
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_max" invoker="get_max">
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_min" invoker="get_min">
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_unit" invoker="get_unit">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_value" invoker="get_value">
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
      </virtual-method>
      <virtual-method name="impose_max" invoker="impose_max">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="maximum" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="impose_min" invoker="impose_min">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="minimum" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_value" invoker="set_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_inc" c:identifier="arv_gc_integer_get_inc">
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
      </method>
      <method name="get_max" c:identifier="arv_gc_integer_get_max">
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
      </method>
      <method name="get_min" c:identifier="arv_gc_integer_get_min">
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
      </method>
      <method name="get_unit" c:identifier="arv_gc_integer_get_unit">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_value" c:identifier="arv_gc_integer_get_value">
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
      </method>
      <method name="impose_max" c:identifier="arv_gc_integer_impose_max">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="maximum" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="impose_min" c:identifier="arv_gc_integer_impose_min">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="minimum" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value" c:identifier="arv_gc_integer_set_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="GcIntegerInterface"
            c:type="ArvGcIntegerInterface"
            glib:is-gtype-struct-for="GcInteger">
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_value">
        <callback name="get_value">
          <return-value transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_value">
        <callback name="set_value">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="gint64" c:type="gint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_min">
        <callback name="get_min">
          <return-value transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_max">
        <callback name="get_max">
          <return-value transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_inc">
        <callback name="get_inc">
          <return-value transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_unit">
        <callback name="get_unit">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="impose_min">
        <callback name="impose_min">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
            <parameter name="minimum" transfer-ownership="none">
              <type name="gint64" c:type="gint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="impose_max">
        <callback name="impose_max">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_integer" transfer-ownership="none">
              <type name="GcInteger" c:type="ArvGcInteger*"/>
            </parameter>
            <parameter name="maximum" transfer-ownership="none">
              <type name="gint64" c:type="gint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="GcIntegerNode"
           c:symbol-prefix="gc_integer_node"
           c:type="ArvGcIntegerNode"
           parent="GcNode"
           glib:type-name="ArvGcIntegerNode"
           glib:get-type="arv_gc_integer_node_get_type"
           glib:type-struct="GcIntegerNodeClass">
      <implements name="GcInteger"/>
      <constructor name="new" c:identifier="arv_gc_integer_node_new">
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <field name="node">
        <type name="GcNode" c:type="ArvGcNode"/>
      </field>
      <field name="value">
        <type name="GObject.Value" c:type="GValue"/>
      </field>
      <field name="minimum">
        <type name="GObject.Value" c:type="GValue"/>
      </field>
      <field name="maximum">
        <type name="GObject.Value" c:type="GValue"/>
      </field>
      <field name="increment">
        <type name="GObject.Value" c:type="GValue"/>
      </field>
      <field name="unit">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="v_string">
        <array zero-terminated="0" c:type="gchar" fixed-size="39">
          <type name="gchar" c:type="char"/>
        </array>
      </field>
    </class>
    <record name="GcIntegerNodeClass"
            c:type="ArvGcIntegerNodeClass"
            glib:is-gtype-struct-for="GcIntegerNode">
      <field name="parent_class">
        <type name="GcNodeClass" c:type="ArvGcNodeClass"/>
      </field>
    </record>
    <enumeration name="GcNameSpace"
                 glib:type-name="ArvGcNameSpace"
                 glib:get-type="arv_gc_name_space_get_type"
                 c:type="ArvGcNameSpace">
      <member name="standard"
              value="0"
              c:identifier="ARV_GC_NAME_SPACE_STANDARD"
              glib:nick="standard"/>
      <member name="custom"
              value="1"
              c:identifier="ARV_GC_NAME_SPACE_CUSTOM"
              glib:nick="custom"/>
    </enumeration>
    <class name="GcNode"
           c:symbol-prefix="gc_node"
           c:type="ArvGcNode"
           parent="GObject.Object"
           glib:type-name="ArvGcNode"
           glib:get-type="arv_gc_node_get_type"
           glib:type-struct="GcNodeClass">
      <constructor name="new" c:identifier="arv_gc_node_new">
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <virtual-method name="add_element" invoker="add_element">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="content" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char**"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="can_add_child" invoker="can_add_child">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="child" transfer-ownership="none">
            <type name="GcNode" c:type="ArvGcNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_node_name" invoker="get_node_name">
        <doc xml:whitespace="preserve">Retrieves the Genicam name of the given node ("Integer", "IntReg", ...).</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">The node name, %NULL on error.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_value_as_string" invoker="get_value_as_string">
        <doc xml:whitespace="preserve">Retrieve the node value a string.
&lt;warning&gt;&lt;para&gt;Please not the string content is still owned by the @node object, which means the returned pointer may not be still valid after a new call to this function.&lt;/para&gt;&lt;/warning&gt;</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a string representation of the node value, %NULL if not applicable.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_value_type" invoker="get_value_type">
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_attribute" invoker="set_attribute">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_value_from_string"
                      invoker="set_value_from_string">
        <doc xml:whitespace="preserve">Set the node value using a string representation of the value. May not be applicable to every node type, but safe.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <doc xml:whitespace="preserve">new node value, as string</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add_child" c:identifier="arv_gc_node_add_child">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="child" transfer-ownership="none">
            <type name="GcNode" c:type="ArvGcNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_element" c:identifier="arv_gc_node_add_element">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="content" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char**"/>
          </parameter>
        </parameters>
      </method>
      <method name="can_add_child" c:identifier="arv_gc_node_can_add_child">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="child" transfer-ownership="none">
            <type name="GcNode" c:type="ArvGcNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_childs" c:identifier="arv_gc_node_get_childs">
        <return-value transfer-ownership="none">
          <type name="GLib.SList" c:type="GSList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
      </method>
      <method name="get_description"
              c:identifier="arv_gc_node_get_description">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_genicam" c:identifier="arv_gc_node_get_genicam">
        <doc xml:whitespace="preserve">Retrieves the parent genicam document of @node.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the parent #ArvGc</doc>
          <type name="Gc" c:type="ArvGc*"/>
        </return-value>
      </method>
      <method name="get_modification_count"
              c:identifier="arv_gc_node_get_modification_count">
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
      </method>
      <method name="get_n_childs" c:identifier="arv_gc_node_get_n_childs">
        <return-value transfer-ownership="none">
          <type name="guint" c:type="unsigned int"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="arv_gc_node_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_node_name" c:identifier="arv_gc_node_get_node_name">
        <doc xml:whitespace="preserve">Retrieves the Genicam name of the given node ("Integer", "IntReg", ...).</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">The node name, %NULL on error.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_tooltip" c:identifier="arv_gc_node_get_tooltip">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_value_as_string"
              c:identifier="arv_gc_node_get_value_as_string">
        <doc xml:whitespace="preserve">Retrieve the node value a string.
&lt;warning&gt;&lt;para&gt;Please not the string content is still owned by the @node object, which means the returned pointer may not be still valid after a new call to this function.&lt;/para&gt;&lt;/warning&gt;</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a string representation of the node value, %NULL if not applicable.</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_value_type" c:identifier="arv_gc_node_get_value_type">
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
      </method>
      <method name="inc_modification_count"
              c:identifier="arv_gc_node_inc_modification_count">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="is_available" c:identifier="arv_gc_node_is_available">
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_attribute" c:identifier="arv_gc_node_set_attribute">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_genicam" c:identifier="arv_gc_node_set_genicam">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="genicam" transfer-ownership="none">
            <type name="Gc" c:type="ArvGc*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_from_string"
              c:identifier="arv_gc_node_set_value_from_string">
        <doc xml:whitespace="preserve">Set the node value using a string representation of the value. May not be applicable to every node type, but safe.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <doc xml:whitespace="preserve">new node value, as string</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="GcNodePrivate" c:type="ArvGcNodePrivate*"/>
      </field>
    </class>
    <record name="GcNodeClass"
            c:type="ArvGcNodeClass"
            glib:is-gtype-struct-for="GcNode">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_node_name">
        <callback name="get_node_name">
          <return-value transfer-ownership="none">
            <doc xml:whitespace="preserve">The node name, %NULL on error.</doc>
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="gc_node" transfer-ownership="none">
              <type name="GcNode" c:type="ArvGcNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_attribute">
        <callback name="set_attribute">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_node" transfer-ownership="none">
              <type name="GcNode" c:type="ArvGcNode*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="add_element">
        <callback name="add_element">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_node" transfer-ownership="none">
              <type name="GcNode" c:type="ArvGcNode*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="content" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char**"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_value_type">
        <callback name="get_value_type">
          <return-value transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </return-value>
          <parameters>
            <parameter name="gc_node" transfer-ownership="none">
              <type name="GcNode" c:type="ArvGcNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_add_child">
        <callback name="can_add_child">
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="gc_node" transfer-ownership="none">
              <type name="GcNode" c:type="ArvGcNode*"/>
            </parameter>
            <parameter name="child" transfer-ownership="none">
              <type name="GcNode" c:type="ArvGcNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_value_from_string">
        <callback name="set_value_from_string">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_node" transfer-ownership="none">
              <type name="GcNode" c:type="ArvGcNode*"/>
            </parameter>
            <parameter name="string" transfer-ownership="none">
              <doc xml:whitespace="preserve">new node value, as string</doc>
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_value_as_string">
        <callback name="get_value_as_string">
          <return-value transfer-ownership="none">
            <doc xml:whitespace="preserve">a string representation of the node value, %NULL if not applicable.</doc>
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="gc_node" transfer-ownership="none">
              <type name="GcNode" c:type="ArvGcNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="GcNodePrivate" c:type="ArvGcNodePrivate" disguised="1">
    </record>
    <class name="GcPort"
           c:symbol-prefix="gc_port"
           c:type="ArvGcPort"
           parent="GcNode"
           glib:type-name="ArvGcPort"
           glib:get-type="arv_gc_port_get_type"
           glib:type-struct="GcPortClass">
      <constructor name="new" c:identifier="arv_gc_port_new">
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="read" c:identifier="arv_gc_port_read">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="write" c:identifier="arv_gc_port_write">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="address" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="node">
        <type name="GcNode" c:type="ArvGcNode"/>
      </field>
    </class>
    <record name="GcPortClass"
            c:type="ArvGcPortClass"
            glib:is-gtype-struct-for="GcPort">
      <field name="parent_class">
        <type name="GcNodeClass" c:type="ArvGcNodeClass"/>
      </field>
    </record>
    <class name="GcRegister"
           c:symbol-prefix="gc_register"
           c:type="ArvGcRegister"
           parent="GcNode"
           glib:type-name="ArvGcRegister"
           glib:get-type="arv_gc_register_get_type"
           glib:type-struct="GcRegisterClass">
      <implements name="GcFloat"/>
      <implements name="GcInteger"/>
      <implements name="GcString"/>
      <constructor name="new" c:identifier="arv_gc_register_new">
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_float" c:identifier="arv_gc_register_new_float">
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_integer"
                   c:identifier="arv_gc_register_new_integer">
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_masked_integer"
                   c:identifier="arv_gc_register_new_masked_integer">
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_string" c:identifier="arv_gc_register_new_string">
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <method name="get" c:identifier="arv_gc_register_get">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="Length" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_address" c:identifier="arv_gc_register_get_address">
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
      </method>
      <method name="get_length" c:identifier="arv_gc_register_get_length">
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
      </method>
      <method name="set" c:identifier="arv_gc_register_set">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="Length" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="node">
        <type name="GcNode" c:type="ArvGcNode"/>
      </field>
      <field name="type">
        <type name="GcRegisterType" c:type="ArvGcRegisterType"/>
      </field>
      <field name="value_type">
        <type name="GType" c:type="GType"/>
      </field>
      <field name="addresses">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="index">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="index_offset">
        <type name="GObject.Value" c:type="GValue"/>
      </field>
      <field name="length">
        <type name="GObject.Value" c:type="GValue"/>
      </field>
      <field name="access_mode">
        <type name="GcAccessMode" c:type="ArvGcAccessMode"/>
      </field>
      <field name="cachable">
        <type name="GcCachable" c:type="ArvGcCachable"/>
      </field>
      <field name="polling_time">
        <type name="guint64" c:type="guint64"/>
      </field>
      <field name="port_name">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="endianess">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="sign">
        <type name="GcSign" c:type="ArvGcSign"/>
      </field>
      <field name="msb">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="lsb">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="cache">
        <type name="gpointer" c:type="void*"/>
      </field>
      <field name="cache_size">
        <type name="gulong" c:type="size_t"/>
      </field>
      <field name="is_cache_valid">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="v_string">
        <array zero-terminated="0" c:type="gchar" fixed-size="39">
          <type name="gchar" c:type="char"/>
        </array>
      </field>
      <field name="invalidators">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
    </class>
    <record name="GcRegisterClass"
            c:type="ArvGcRegisterClass"
            glib:is-gtype-struct-for="GcRegister">
      <field name="parent_class">
        <type name="GcNodeClass" c:type="ArvGcNodeClass"/>
      </field>
    </record>
    <enumeration name="GcRegisterType"
                 glib:type-name="ArvGcRegisterType"
                 glib:get-type="arv_gc_register_type_get_type"
                 c:type="ArvGcRegisterType">
      <member name="register"
              value="0"
              c:identifier="ARV_GC_REGISTER_TYPE_REGISTER"
              glib:nick="register"/>
      <member name="integer"
              value="1"
              c:identifier="ARV_GC_REGISTER_TYPE_INTEGER"
              glib:nick="integer"/>
      <member name="masked_integer"
              value="2"
              c:identifier="ARV_GC_REGISTER_TYPE_MASKED_INTEGER"
              glib:nick="masked-integer"/>
      <member name="float"
              value="3"
              c:identifier="ARV_GC_REGISTER_TYPE_FLOAT"
              glib:nick="float"/>
      <member name="string"
              value="4"
              c:identifier="ARV_GC_REGISTER_TYPE_STRING"
              glib:nick="string"/>
    </enumeration>
    <enumeration name="GcSign"
                 glib:type-name="ArvGcSign"
                 glib:get-type="arv_gc_sign_get_type"
                 c:type="ArvGcSign">
      <member name="signed"
              value="0"
              c:identifier="ARV_GC_SIGN_SIGNED"
              glib:nick="signed"/>
      <member name="unsigned"
              value="1"
              c:identifier="ARV_GC_SIGN_UNSIGNED"
              glib:nick="unsigned"/>
    </enumeration>
    <interface name="GcString"
               c:symbol-prefix="gc_string"
               c:type="ArvGcString"
               glib:type-name="ArvGcString"
               glib:get-type="arv_gc_string_get_type"
               glib:type-struct="GcStringInterface">
      <virtual-method name="get_max_length" invoker="get_max_length">
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_value" invoker="get_value">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_value" invoker="set_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_max_length"
              c:identifier="arv_gc_string_get_max_length">
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
      </method>
      <method name="get_value" c:identifier="arv_gc_string_get_value">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="set_value" c:identifier="arv_gc_string_set_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="GcStringInterface"
            c:type="ArvGcStringInterface"
            glib:is-gtype-struct-for="GcString">
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_value">
        <callback name="get_value">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="gc_string" transfer-ownership="none">
              <type name="GcString" c:type="ArvGcString*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_value">
        <callback name="set_value">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="gc_string" transfer-ownership="none">
              <type name="GcString" c:type="ArvGcString*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_max_length">
        <callback name="get_max_length">
          <return-value transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="gc_string" transfer-ownership="none">
              <type name="GcString" c:type="ArvGcString*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="GcSwissKnife"
           c:symbol-prefix="gc_swiss_knife"
           c:type="ArvGcSwissKnife"
           parent="GcNode"
           glib:type-name="ArvGcSwissKnife"
           glib:get-type="arv_gc_swiss_knife_get_type"
           glib:type-struct="GcSwissKnifeClass">
      <implements name="GcFloat"/>
      <implements name="GcInteger"/>
      <constructor name="new" c:identifier="arv_gc_swiss_knife_new">
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <constructor name="new_integer"
                   c:identifier="arv_gc_swiss_knife_new_integer">
        <return-value transfer-ownership="full">
          <type name="GcNode" c:type="ArvGcNode*"/>
        </return-value>
      </constructor>
      <field name="node">
        <type name="GcNode" c:type="ArvGcNode"/>
      </field>
      <field name="value_type">
        <type name="GType" c:type="GType"/>
      </field>
      <field name="variables">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="formula">
        <type name="Evaluator" c:type="ArvEvaluator*"/>
      </field>
    </class>
    <record name="GcSwissKnifeClass"
            c:type="ArvGcSwissKnifeClass"
            glib:is-gtype-struct-for="GcSwissKnife">
      <field name="parent_class">
        <type name="GcNodeClass" c:type="ArvGcNodeClass"/>
      </field>
    </record>
    <class name="GvDevice"
           c:symbol-prefix="gv_device"
           c:type="ArvGvDevice"
           parent="Device"
           glib:type-name="ArvGvDevice"
           glib:get-type="arv_gv_device_get_type"
           glib:type-struct="GvDeviceClass">
      <constructor name="new" c:identifier="arv_gv_device_new">
        <return-value transfer-ownership="full">
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
        <parameters>
          <parameter name="interface_address" transfer-ownership="none">
            <type name="Gio.InetAddress" c:type="GInetAddress*"/>
          </parameter>
          <parameter name="device_address" transfer-ownership="none">
            <type name="Gio.InetAddress" c:type="GInetAddress*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_timestamp_tick_frequency"
              c:identifier="arv_gv_device_get_timestamp_tick_frequency">
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
      </method>
      <field name="device">
        <type name="Device" c:type="ArvDevice"/>
      </field>
      <field name="priv">
        <type name="GvDevicePrivate" c:type="ArvGvDevicePrivate*"/>
      </field>
    </class>
    <record name="GvDeviceClass"
            c:type="ArvGvDeviceClass"
            glib:is-gtype-struct-for="GvDevice">
      <field name="parent_class">
        <type name="DeviceClass" c:type="ArvDeviceClass"/>
      </field>
    </record>
    <record name="GvDevicePrivate" c:type="ArvGvDevicePrivate" disguised="1">
    </record>
    <class name="GvInterface"
           c:symbol-prefix="gv_interface"
           c:type="ArvGvInterface"
           parent="Interface"
           glib:type-name="ArvGvInterface"
           glib:get-type="arv_gv_interface_get_type"
           glib:type-struct="GvInterfaceClass">
      <function name="destroy_instance"
                c:identifier="arv_gv_interface_destroy_instance">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="get_instance"
                c:identifier="arv_gv_interface_get_instance">
        <doc xml:whitespace="preserve">Gets the unique instance of the GV interface.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a #ArvInterface singleton.</doc>
          <type name="Interface" c:type="ArvInterface*"/>
        </return-value>
      </function>
      <field name="interface">
        <type name="Interface" c:type="ArvInterface"/>
      </field>
      <field name="priv">
        <type name="GvInterfacePrivate" c:type="ArvGvInterfacePrivate*"/>
      </field>
    </class>
    <record name="GvInterfaceClass"
            c:type="ArvGvInterfaceClass"
            glib:is-gtype-struct-for="GvInterface">
      <field name="parent_class">
        <type name="InterfaceClass" c:type="ArvInterfaceClass"/>
      </field>
    </record>
    <record name="GvInterfacePrivate"
            c:type="ArvGvInterfacePrivate"
            disguised="1">
    </record>
    <class name="GvStream"
           c:symbol-prefix="gv_stream"
           c:type="ArvGvStream"
           parent="Stream"
           glib:type-name="ArvGvStream"
           glib:get-type="arv_gv_stream_get_type"
           glib:type-struct="GvStreamClass">
      <constructor name="new"
                   c:identifier="arv_gv_stream_new"
                   introspectable="0">
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #ArvStream.</doc>
          <type name="Stream" c:type="ArvStream*"/>
        </return-value>
        <parameters>
          <parameter name="device_address" transfer-ownership="none">
            <doc xml:whitespace="preserve">inet device address for gvsp</doc>
            <type name="Gio.InetAddress" c:type="GInetAddress*"/>
          </parameter>
          <parameter name="port" transfer-ownership="none">
            <doc xml:whitespace="preserve">inet port</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="3">
            <doc xml:whitespace="preserve">processing callback</doc>
            <type name="StreamCallback" c:type="ArvStreamCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <doc xml:whitespace="preserve">user data for @callback</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
          <parameter name="timestamp_tick_frequency" transfer-ownership="none">
            <doc xml:whitespace="preserve">camera tick frequency for timestamping</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="packet_size" transfer-ownership="none">
            <doc xml:whitespace="preserve">gvsp packet size, in bytes</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_port" c:identifier="arv_gv_stream_get_port">
        <return-value transfer-ownership="none">
          <type name="guint16" c:type="guint16"/>
        </return-value>
      </method>
      <method name="get_statistics"
              c:identifier="arv_gv_stream_get_statistics">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="n_resent_packets" transfer-ownership="none">
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="n_missing_packets" transfer-ownership="none">
            <type name="guint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <property name="frame-retention" writable="1" transfer-ownership="none">
        <type name="guint"/>
      </property>
      <property name="packet-resend" writable="1" transfer-ownership="none">
        <type name="GvStreamPacketResend"/>
      </property>
      <property name="packet-timeout" writable="1" transfer-ownership="none">
        <type name="guint"/>
      </property>
      <property name="socket-buffer" writable="1" transfer-ownership="none">
        <type name="GvStreamSocketBuffer"/>
      </property>
      <property name="socket-buffer-size"
                writable="1"
                transfer-ownership="none">
        <type name="gint"/>
      </property>
      <field name="stream">
        <type name="Stream" c:type="ArvStream"/>
      </field>
      <field name="socket">
        <type name="Gio.Socket" c:type="GSocket*"/>
      </field>
      <field name="incoming_address">
        <type name="Gio.SocketAddress" c:type="GSocketAddress*"/>
      </field>
      <field name="thread">
        <type name="GLib.Thread" c:type="GThread*"/>
      </field>
      <field name="thread_data">
        <type name="gpointer" c:type="void*"/>
      </field>
    </class>
    <record name="GvStreamClass"
            c:type="ArvGvStreamClass"
            glib:is-gtype-struct-for="GvStream">
      <field name="parent_class">
        <type name="StreamClass" c:type="ArvStreamClass"/>
      </field>
    </record>
    <enumeration name="GvStreamPacketResend"
                 glib:type-name="ArvGvStreamPacketResend"
                 glib:get-type="arv_gv_stream_packet_resend_get_type"
                 c:type="ArvGvStreamPacketResend">
      <member name="never"
              value="0"
              c:identifier="ARV_GV_STREAM_PACKET_RESEND_NEVER"
              glib:nick="never"/>
      <member name="always"
              value="1"
              c:identifier="ARV_GV_STREAM_PACKET_RESEND_ALWAYS"
              glib:nick="always"/>
    </enumeration>
    <enumeration name="GvStreamSocketBuffer"
                 glib:type-name="ArvGvStreamSocketBuffer"
                 glib:get-type="arv_gv_stream_socket_buffer_get_type"
                 c:type="ArvGvStreamSocketBuffer">
      <member name="fixed"
              value="0"
              c:identifier="ARV_GV_STREAM_SOCKET_BUFFER_FIXED"
              glib:nick="fixed"/>
      <member name="auto"
              value="1"
              c:identifier="ARV_GV_STREAM_SOCKET_BUFFER_AUTO"
              glib:nick="auto"/>
    </enumeration>
    <enumeration name="GvcpCommand"
                 glib:type-name="ArvGvcpCommand"
                 glib:get-type="arv_gvcp_command_get_type"
                 c:type="ArvGvcpCommand">
      <member name="discovery_cmd"
              value="2"
              c:identifier="ARV_GVCP_COMMAND_DISCOVERY_CMD"
              glib:nick="discovery-cmd"/>
      <member name="discovery_ack"
              value="3"
              c:identifier="ARV_GVCP_COMMAND_DISCOVERY_ACK"
              glib:nick="discovery-ack"/>
      <member name="bye_cmd"
              value="4"
              c:identifier="ARV_GVCP_COMMAND_BYE_CMD"
              glib:nick="bye-cmd"/>
      <member name="bye_ack"
              value="5"
              c:identifier="ARV_GVCP_COMMAND_BYE_ACK"
              glib:nick="bye-ack"/>
      <member name="packet_resend_cmd"
              value="64"
              c:identifier="ARV_GVCP_COMMAND_PACKET_RESEND_CMD"
              glib:nick="packet-resend-cmd"/>
      <member name="packet_resend_ack"
              value="65"
              c:identifier="ARV_GVCP_COMMAND_PACKET_RESEND_ACK"
              glib:nick="packet-resend-ack"/>
      <member name="read_register_cmd"
              value="128"
              c:identifier="ARV_GVCP_COMMAND_READ_REGISTER_CMD"
              glib:nick="read-register-cmd"/>
      <member name="read_register_ack"
              value="129"
              c:identifier="ARV_GVCP_COMMAND_READ_REGISTER_ACK"
              glib:nick="read-register-ack"/>
      <member name="write_register_cmd"
              value="130"
              c:identifier="ARV_GVCP_COMMAND_WRITE_REGISTER_CMD"
              glib:nick="write-register-cmd"/>
      <member name="write_register_ack"
              value="131"
              c:identifier="ARV_GVCP_COMMAND_WRITE_REGISTER_ACK"
              glib:nick="write-register-ack"/>
      <member name="read_memory_cmd"
              value="132"
              c:identifier="ARV_GVCP_COMMAND_READ_MEMORY_CMD"
              glib:nick="read-memory-cmd"/>
      <member name="read_memory_ack"
              value="133"
              c:identifier="ARV_GVCP_COMMAND_READ_MEMORY_ACK"
              glib:nick="read-memory-ack"/>
      <member name="write_memory_cmd"
              value="134"
              c:identifier="ARV_GVCP_COMMAND_WRITE_MEMORY_CMD"
              glib:nick="write-memory-cmd"/>
      <member name="write_memory_ack"
              value="135"
              c:identifier="ARV_GVCP_COMMAND_WRITE_MEMORY_ACK"
              glib:nick="write-memory-ack"/>
    </enumeration>
    <enumeration name="GvcpPacketType"
                 glib:type-name="ArvGvcpPacketType"
                 glib:get-type="arv_gvcp_packet_type_get_type"
                 c:type="ArvGvcpPacketType">
      <member name="ack"
              value="0"
              c:identifier="ARV_GVCP_PACKET_TYPE_ACK"
              glib:nick="ack"/>
      <member name="resend"
              value="16896"
              c:identifier="ARV_GVCP_PACKET_TYPE_RESEND"
              glib:nick="resend"/>
      <member name="cmd"
              value="16897"
              c:identifier="ARV_GVCP_PACKET_TYPE_CMD"
              glib:nick="cmd"/>
      <member name="error"
              value="32774"
              c:identifier="ARV_GVCP_PACKET_TYPE_ERROR"
              glib:nick="error"/>
    </enumeration>
    <enumeration name="GvspContentType"
                 glib:type-name="ArvGvspContentType"
                 glib:get-type="arv_gvsp_content_type_get_type"
                 c:type="ArvGvspContentType">
      <member name="leader"
              value="1"
              c:identifier="ARV_GVSP_CONTENT_TYPE_DATA_LEADER"
              glib:nick="leader"/>
      <member name="trailer"
              value="2"
              c:identifier="ARV_GVSP_CONTENT_TYPE_DATA_TRAILER"
              glib:nick="trailer"/>
      <member name="block"
              value="3"
              c:identifier="ARV_GVSP_CONTENT_TYPE_DATA_BLOCK"
              glib:nick="block"/>
    </enumeration>
    <enumeration name="GvspPacketType"
                 glib:type-name="ArvGvspPacketType"
                 glib:get-type="arv_gvsp_packet_type_get_type"
                 c:type="ArvGvspPacketType">
      <member name="ok"
              value="0"
              c:identifier="ARV_GVSP_PACKET_TYPE_OK"
              glib:nick="ok"/>
      <member name="error"
              value="32780"
              c:identifier="ARV_GVSP_PACKET_TYPE_ERROR"
              glib:nick="error"/>
    </enumeration>
    <class name="Interface"
           c:symbol-prefix="interface"
           c:type="ArvInterface"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ArvInterface"
           glib:get-type="arv_interface_get_type"
           glib:type-struct="InterfaceClass">
      <virtual-method name="open_device" invoker="open_device">
        <doc xml:whitespace="preserve">Creates a new #ArvDevice object corresponding to the given device id string. The first available device is returned if @device_id is null.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #ArvDevice</doc>
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
        <parameters>
          <parameter name="device_id" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">device unique id</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="update_device_list">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="device_ids" transfer-ownership="none">
            <array name="GLib.Array" c:type="GArray*">
              <type name="gpointer" c:type="gpointer"/>
            </array>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_device_id" c:identifier="arv_interface_get_device_id">
        <doc xml:whitespace="preserve">Queries the unique device id corresponding to index.  Prior to this
call the @arv_interface_update_device_list function must be called.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">a unique device id</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <doc xml:whitespace="preserve">device index</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_n_devices" c:identifier="arv_interface_get_n_devices">
        <doc xml:whitespace="preserve">Queries the number of available devices on this interface. Prior to this
call the @arv_interface_update_device_list function must be called. The list content will not
change until the next call of the update function.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">the number of available devices</doc>
          <type name="guint" c:type="unsigned int"/>
        </return-value>
      </method>
      <method name="open_device" c:identifier="arv_interface_open_device">
        <doc xml:whitespace="preserve">Creates a new #ArvDevice object corresponding to the given device id string. The first available device is returned if @device_id is null.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a new #ArvDevice</doc>
          <type name="Device" c:type="ArvDevice*"/>
        </return-value>
        <parameters>
          <parameter name="device_id" transfer-ownership="none" allow-none="1">
            <doc xml:whitespace="preserve">device unique id</doc>
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_device_list"
              c:identifier="arv_interface_update_device_list">
        <doc xml:whitespace="preserve">Updates the internal list of available devices. This may change the
connection between a list index and a device ID.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="InterfacePrivate" c:type="ArvInterfacePrivate*"/>
      </field>
    </class>
    <record name="InterfaceClass"
            c:type="ArvInterfaceClass"
            glib:is-gtype-struct-for="Interface">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="update_device_list">
        <callback name="update_device_list">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="interface" transfer-ownership="none">
              <type name="Interface" c:type="ArvInterface*"/>
            </parameter>
            <parameter name="device_ids" transfer-ownership="none">
              <array name="GLib.Array" c:type="GArray*">
                <type name="gpointer" c:type="gpointer"/>
              </array>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="open_device">
        <callback name="open_device">
          <return-value transfer-ownership="full">
            <doc xml:whitespace="preserve">a new #ArvDevice</doc>
            <type name="Device" c:type="ArvDevice*"/>
          </return-value>
          <parameters>
            <parameter name="interface" transfer-ownership="none">
              <type name="Interface" c:type="ArvInterface*"/>
            </parameter>
            <parameter name="device_id"
                       transfer-ownership="none"
                       allow-none="1">
              <doc xml:whitespace="preserve">device unique id</doc>
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="InterfacePrivate" c:type="ArvInterfacePrivate" disguised="1">
    </record>
    <enumeration name="PixelFormat"
                 glib:type-name="ArvPixelFormat"
                 glib:get-type="arv_pixel_format_get_type"
                 c:type="ArvPixelFormat">
      <member name="mono_8"
              value="17301505"
              c:identifier="ARV_PIXEL_FORMAT_MONO_8"
              glib:nick="mono-8"/>
      <member name="mono_8_signed"
              value="17301506"
              c:identifier="ARV_PIXEL_FORMAT_MONO_8_SIGNED"
              glib:nick="mono-8-signed"/>
      <member name="mono_10"
              value="17825795"
              c:identifier="ARV_PIXEL_FORMAT_MONO_10"
              glib:nick="mono-10"/>
      <member name="mono_10_packed"
              value="17563652"
              c:identifier="ARV_PIXEL_FORMAT_MONO_10_PACKED"
              glib:nick="mono-10-packed"/>
      <member name="mono_12"
              value="17825797"
              c:identifier="ARV_PIXEL_FORMAT_MONO_12"
              glib:nick="mono-12"/>
      <member name="mono_12_packed"
              value="17563654"
              c:identifier="ARV_PIXEL_FORMAT_MONO_12_PACKED"
              glib:nick="mono-12-packed"/>
      <member name="mono_16"
              value="17825799"
              c:identifier="ARV_PIXEL_FORMAT_MONO_16"
              glib:nick="mono-16"/>
      <member name="bayer_gr_8"
              value="17301512"
              c:identifier="ARV_PIXEL_FORMAT_BAYER_GR_8"
              glib:nick="bayer-gr-8"/>
      <member name="bayer_rg_8"
              value="17301513"
              c:identifier="ARV_PIXEL_FORMAT_BAYER_RG_8"
              glib:nick="bayer-rg-8"/>
      <member name="bayer_gb_8"
              value="17301514"
              c:identifier="ARV_PIXEL_FORMAT_BAYER_GB_8"
              glib:nick="bayer-gb-8"/>
      <member name="bayer_bg_8"
              value="17301515"
              c:identifier="ARV_PIXEL_FORMAT_BAYER_BG_8"
              glib:nick="bayer-bg-8"/>
      <member name="bayer_gr_10"
              value="17825804"
              c:identifier="ARV_PIXEL_FORMAT_BAYER_GR_10"
              glib:nick="bayer-gr-10"/>
      <member name="bayer_rg_10"
              value="17825805"
              c:identifier="ARV_PIXEL_FORMAT_BAYER_RG_10"
              glib:nick="bayer-rg-10"/>
      <member name="bayer_gb_10"
              value="17825806"
              c:identifier="ARV_PIXEL_FORMAT_BAYER_GB_10"
              glib:nick="bayer-gb-10"/>
      <member name="bayer_bg_10"
              value="17825807"
              c:identifier="ARV_PIXEL_FORMAT_BAYER_BG_10"
              glib:nick="bayer-bg-10"/>
      <member name="bayer_gr_12"
              value="17825808"
              c:identifier="ARV_PIXEL_FORMAT_BAYER_GR_12"
              glib:nick="bayer-gr-12"/>
      <member name="bayer_rg_12"
              value="17825809"
              c:identifier="ARV_PIXEL_FORMAT_BAYER_RG_12"
              glib:nick="bayer-rg-12"/>
      <member name="bayer_gb_12"
              value="17825810"
              c:identifier="ARV_PIXEL_FORMAT_BAYER_GB_12"
              glib:nick="bayer-gb-12"/>
      <member name="bayer_bg_12"
              value="17825811"
              c:identifier="ARV_PIXEL_FORMAT_BAYER_BG_12"
              glib:nick="bayer-bg-12"/>
      <member name="rgb_8_packed"
              value="35127316"
              c:identifier="ARV_PIXEL_FORMAT_RGB_8_PACKED"
              glib:nick="rgb-8-packed"/>
      <member name="bgr_8_packed"
              value="35127317"
              c:identifier="ARV_PIXEL_FORMAT_BGR_8_PACKED"
              glib:nick="bgr-8-packed"/>
      <member name="rgba_8_packed"
              value="35651606"
              c:identifier="ARV_PIXEL_FORMAT_RGBA_8_PACKED"
              glib:nick="rgba-8-packed"/>
      <member name="bgra_8_packed"
              value="35651607"
              c:identifier="ARV_PIXEL_FORMAT_BGRA_8_PACKED"
              glib:nick="bgra-8-packed"/>
      <member name="rgb_10_packed"
              value="36700184"
              c:identifier="ARV_PIXEL_FORMAT_RGB_10_PACKED"
              glib:nick="rgb-10-packed"/>
      <member name="bgr_10_packed"
              value="36700185"
              c:identifier="ARV_PIXEL_FORMAT_BGR_10_PACKED"
              glib:nick="bgr-10-packed"/>
      <member name="rgb_12_packed"
              value="36700186"
              c:identifier="ARV_PIXEL_FORMAT_RGB_12_PACKED"
              glib:nick="rgb-12-packed"/>
      <member name="bgr_12_packed"
              value="36700187"
              c:identifier="ARV_PIXEL_FORMAT_BGR_12_PACKED"
              glib:nick="bgr-12-packed"/>
      <member name="yuv_411_packed"
              value="34340894"
              c:identifier="ARV_PIXEL_FORMAT_YUV_411_PACKED"
              glib:nick="yuv-411-packed"/>
      <member name="yuv_422_packed"
              value="34603039"
              c:identifier="ARV_PIXEL_FORMAT_YUV_422_PACKED"
              glib:nick="yuv-422-packed"/>
      <member name="yuv_444_packed"
              value="35127328"
              c:identifier="ARV_PIXEL_FORMAT_YUV_444_PACKED"
              glib:nick="yuv-444-packed"/>
      <member name="rgb_8_planar"
              value="35127329"
              c:identifier="ARV_PIXEL_FORMAT_RGB_8_PLANAR"
              glib:nick="rgb-8-planar"/>
      <member name="rgb_10_planar"
              value="36700194"
              c:identifier="ARV_PIXEL_FORMAT_RGB_10_PLANAR"
              glib:nick="rgb-10-planar"/>
      <member name="rgb_12_planar"
              value="36700195"
              c:identifier="ARV_PIXEL_FORMAT_RGB_12_PLANAR"
              glib:nick="rgb-12-planar"/>
      <member name="rgb_16_planar"
              value="36700196"
              c:identifier="ARV_PIXEL_FORMAT_RGB_16_PLANAR"
              glib:nick="rgb-16-planar"/>
      <member name="yuv_422_yuyv_packed"
              value="34603058"
              c:identifier="ARV_PIXEL_FORMAT_YUV_422_YUYV_PACKED"
              glib:nick="yuv-422-yuyv-packed"/>
      <member name="custom_bayer_gr_12_packed"
              value="2165047297"
              c:identifier="ARV_PIXEL_FORMAT_CUSTOM_BAYER_GR_12_PACKED"
              glib:nick="custom-bayer-gr-12-packed"/>
      <member name="custom_bayer_rg_12_packed"
              value="2165047298"
              c:identifier="ARV_PIXEL_FORMAT_CUSTOM_BAYER_RG_12_PACKED"
              glib:nick="custom-bayer-rg-12-packed"/>
      <member name="custom_bayer_gb_12_packed"
              value="2165047299"
              c:identifier="ARV_PIXEL_FORMAT_CUSTOM_BAYER_GB_12_PACKED"
              glib:nick="custom-bayer-gb-12-packed"/>
      <member name="custom_bayer_bg_12_packed"
              value="2165047300"
              c:identifier="ARV_PIXEL_FORMAT_CUSTOM_BAYER_BG_12_PACKED"
              glib:nick="custom-bayer-bg-12-packed"/>
      <member name="custom_yuv_422_yuyv_packed"
              value="2182086661"
              c:identifier="ARV_PIXEL_FORMAT_CUSTOM_YUV_422_YUYV_PACKED"
              glib:nick="custom-yuv-422-yuyv-packed"/>
      <member name="custom_bayer_gr_16"
              value="2165309446"
              c:identifier="ARV_PIXEL_FORMAT_CUSTOM_BAYER_GR_16"
              glib:nick="custom-bayer-gr-16"/>
      <member name="custom_bayer_rg_16"
              value="2165309447"
              c:identifier="ARV_PIXEL_FORMAT_CUSTOM_BAYER_RG_16"
              glib:nick="custom-bayer-rg-16"/>
      <member name="custom_bayer_gb_16"
              value="2165309448"
              c:identifier="ARV_PIXEL_FORMAT_CUSTOM_BAYER_GB_16"
              glib:nick="custom-bayer-gb-16"/>
      <member name="custom_bayer_bg_16"
              value="2165309449"
              c:identifier="ARV_PIXEL_FORMAT_CUSTOM_BAYER_BG_16"
              glib:nick="custom-bayer-bg-16"/>
    </enumeration>
    <class name="Stream"
           c:symbol-prefix="stream"
           c:type="ArvStream"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ArvStream"
           glib:get-type="arv_stream_get_type"
           glib:type-struct="StreamClass">
      <virtual-method name="get_statistics" invoker="get_statistics">
        <doc xml:whitespace="preserve">An accessor to the stream statistics.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="n_completed_buffers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <doc xml:whitespace="preserve">number of complete received buffers</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="n_failures"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <doc xml:whitespace="preserve">number of reception failures</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="n_underruns"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <doc xml:whitespace="preserve">number of input buffer underruns</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="new_buffer">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <method name="get_emit_signals"
              c:identifier="arv_stream_get_emit_signals"
              version="0.1.3">
        <doc xml:whitespace="preserve">Check if stream will emit its signals.</doc>
        <return-value transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE if @appsink is emiting its signals.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_n_buffers" c:identifier="arv_stream_get_n_buffers">
        <doc xml:whitespace="preserve">An accessor to the stream buffer queue lengths.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="n_input_buffers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <doc xml:whitespace="preserve">input queue length</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="n_output_buffers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <doc xml:whitespace="preserve">output queue length</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_statistics" c:identifier="arv_stream_get_statistics">
        <doc xml:whitespace="preserve">An accessor to the stream statistics.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="n_completed_buffers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <doc xml:whitespace="preserve">number of complete received buffers</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="n_failures"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <doc xml:whitespace="preserve">number of reception failures</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
          <parameter name="n_underruns"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <doc xml:whitespace="preserve">number of input buffer underruns</doc>
            <type name="guint64" c:type="guint64*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pop_buffer" c:identifier="arv_stream_pop_buffer">
        <doc xml:whitespace="preserve">Pops a buffer from the output queue of @stream. The retrieved buffer
may contain an invalid image. Caller should check the buffer status before using it.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #ArvBuffer</doc>
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
      </method>
      <method name="pop_input_buffer"
              c:identifier="arv_stream_pop_input_buffer"
              introspectable="0">
        <doc xml:whitespace="preserve">Pos a buffer from the input queue of @stream.</doc>
        <return-value>
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
      </method>
      <method name="push_buffer" c:identifier="arv_stream_push_buffer">
        <doc xml:whitespace="preserve">Pushes a #ArvBuffer to the @stream thread. The @stream takes ownership of @buffer,
and will free all the buffers still in its queues when destroyed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="full">
            <doc xml:whitespace="preserve">buffer to push</doc>
            <type name="Buffer" c:type="ArvBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="push_output_buffer"
              c:identifier="arv_stream_push_output_buffer">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="Buffer" c:type="ArvBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_emit_signals"
              c:identifier="arv_stream_set_emit_signals"
              version="0.1.3">
        <doc xml:whitespace="preserve">Make stream emit signals. This option is
by default disabled because signal emission is expensive and unneeded when
the application prefers to operate in pull mode.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="emit_signals" transfer-ownership="none">
            <doc xml:whitespace="preserve">the new state</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="timed_pop_buffer"
              c:identifier="arv_stream_timed_pop_buffer">
        <doc xml:whitespace="preserve">Pops a buffer from the output queue of @stream, waiting no more than @timeout. The retrieved buffer
may contain an invalid image. Caller should check the buffer status before using it.</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">a #ArvBuffer</doc>
          <type name="Buffer" c:type="ArvBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="timeout" transfer-ownership="none">
            <doc xml:whitespace="preserve">timeout, in µs</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <property name="emit-signals" writable="1" transfer-ownership="none">
        <type name="gboolean"/>
      </property>
      <field name="object">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="StreamPrivate" c:type="ArvStreamPrivate*"/>
      </field>
      <glib:signal name="new-buffer">
        <return-value transfer-ownership="none">
          <type name="none"/>
        </return-value>
      </glib:signal>
    </class>
    <callback name="StreamCallback" c:type="ArvStreamCallback">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="user_data" transfer-ownership="none" closure="0">
          <type name="gpointer" c:type="void*"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="StreamCallbackType" c:type="ArvStreamCallbackType"/>
        </parameter>
        <parameter name="buffer" transfer-ownership="none">
          <type name="Buffer" c:type="ArvBuffer*"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="StreamCallbackType"
                 glib:type-name="ArvStreamCallbackType"
                 glib:get-type="arv_stream_callback_type_get_type"
                 c:type="ArvStreamCallbackType">
      <doc xml:whitespace="preserve">Describes when the stream callback is called.</doc>
      <member name="init"
              value="0"
              c:identifier="ARV_STREAM_CALLBACK_TYPE_INIT"
              glib:nick="init"/>
      <member name="exit"
              value="1"
              c:identifier="ARV_STREAM_CALLBACK_TYPE_EXIT"
              glib:nick="exit"/>
      <member name="start_buffer"
              value="2"
              c:identifier="ARV_STREAM_CALLBACK_TYPE_START_BUFFER"
              glib:nick="start-buffer"/>
      <member name="buffer_done"
              value="3"
              c:identifier="ARV_STREAM_CALLBACK_TYPE_BUFFER_DONE"
              glib:nick="buffer-done"/>
    </enumeration>
    <record name="StreamClass"
            c:type="ArvStreamClass"
            glib:is-gtype-struct-for="Stream">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_statistics">
        <callback name="get_statistics">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="Stream" c:type="ArvStream*"/>
            </parameter>
            <parameter name="n_completed_buffers"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       allow-none="1">
              <doc xml:whitespace="preserve">number of complete received buffers</doc>
              <type name="guint64" c:type="guint64*"/>
            </parameter>
            <parameter name="n_failures"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       allow-none="1">
              <doc xml:whitespace="preserve">number of reception failures</doc>
              <type name="guint64" c:type="guint64*"/>
            </parameter>
            <parameter name="n_underruns"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       allow-none="1">
              <doc xml:whitespace="preserve">number of input buffer underruns</doc>
              <type name="guint64" c:type="guint64*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="new_buffer">
        <callback name="new_buffer">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="Stream" c:type="ArvStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="StreamPrivate" c:type="ArvStreamPrivate" disguised="1">
    </record>
    <record name="Zip" c:type="ArvZip" disguised="1">
    </record>
    <record name="ZipFile" c:type="ArvZipFile" disguised="1">
    </record>
    <function name="acquisition_mode_from_string"
              c:identifier="arv_acquisition_mode_from_string">
      <return-value transfer-ownership="none">
        <type name="AcquisitionMode" c:type="ArvAcquisitionMode"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="acquisition_mode_to_string"
              c:identifier="arv_acquisition_mode_to_string">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="AcquisitionMode" c:type="ArvAcquisitionMode"/>
        </parameter>
      </parameters>
    </function>
    <function name="auto_from_string" c:identifier="arv_auto_from_string">
      <return-value transfer-ownership="none">
        <type name="Auto" c:type="ArvAuto"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="auto_to_string" c:identifier="arv_auto_to_string">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <type name="Auto" c:type="ArvAuto"/>
        </parameter>
      </parameters>
    </function>
    <function name="debug" c:identifier="arv_debug" introspectable="0">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="category" transfer-ownership="none">
          <type name="DebugCategory" c:type="ArvDebugCategory*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="debug_check" c:identifier="arv_debug_check">
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="category" transfer-ownership="none">
          <type name="DebugCategory" c:type="ArvDebugCategory*"/>
        </parameter>
        <parameter name="level" transfer-ownership="none">
          <type name="DebugLevel" c:type="ArvDebugLevel"/>
        </parameter>
      </parameters>
    </function>
    <function name="debug_enable" c:identifier="arv_debug_enable">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="category_selection" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="debug_shutdown" c:identifier="arv_debug_shutdown">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="get_device_id" c:identifier="arv_get_device_id">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="index" transfer-ownership="none">
          <type name="guint" c:type="unsigned int"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_fake_camera_genicam_xml"
              c:identifier="arv_get_fake_camera_genicam_xml">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="size" transfer-ownership="none">
          <type name="gulong" c:type="size_t*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_interface_id" c:identifier="arv_get_interface_id">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="index" transfer-ownership="none">
          <type name="guint" c:type="unsigned int"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_n_devices" c:identifier="arv_get_n_devices">
      <return-value transfer-ownership="none">
        <type name="guint" c:type="unsigned int"/>
      </return-value>
    </function>
    <function name="get_n_interfaces" c:identifier="arv_get_n_interfaces">
      <return-value transfer-ownership="none">
        <type name="guint" c:type="unsigned int"/>
      </return-value>
    </function>
    <function name="log" c:identifier="arv_log" introspectable="0">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="category" transfer-ownership="none">
          <type name="DebugCategory" c:type="ArvDebugCategory*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="open_device" c:identifier="arv_open_device">
      <doc xml:whitespace="preserve">Open a device corresponding to the given identifier. A null string makes this function return the first available device.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">a new #ArvDevice instance</doc>
        <type name="Device" c:type="ArvDevice*"/>
      </return-value>
      <parameters>
        <parameter name="device_id" transfer-ownership="none" allow-none="1">
          <doc xml:whitespace="preserve">a device identifier string</doc>
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_fake_camera_genicam_filename"
              c:identifier="arv_set_fake_camera_genicam_filename">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="filename" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="shutdown" c:identifier="arv_shutdown">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="update_device_list" c:identifier="arv_update_device_list">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="warning" c:identifier="arv_warning" introspectable="0">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="category" transfer-ownership="none">
          <type name="DebugCategory" c:type="ArvDebugCategory*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
