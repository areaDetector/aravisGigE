/**
\mainpage aravisGigE EPICS Support Module
\section intro_sec Introduction
This module is a thin wrapper to the
<a href="http://live.gnome.org/Aravis">aravis</a>
library for GigE cameras. It supports any GigE vision camera, and an epics
driver is provided for any parameter exposed in a category of its genicam
XML file. A python script is included for creating databases and edm screens
from the XML file too.

Tested working cameras:
- AVT Manta series
- Prosilica GC series
- Baumer TXG series
- JAI Pulnix 6740 series

Tested mostly working cameras:
- Sony CVC EH6300
 - 1080p/25 mode works best, still get occasional dropped frame
 - Using Zoom target seems to pause camera while zooming which then makes Aravis think the camera is disconnected. A reconnect fixes this
- Point Grey Research Flea3 and Blackfly
 - Needs increased mem buffers as detailed under \ref bugs_sec
 - Still get a number of dropped frames

The documentation here is top level documentation on creating an IOC with an
aravisCamera areaDetector driver:
- aravisCamera: areaDetector driver class
- aravisCamera.template: Basic template that should be instantiated for any
  camera
- Add on templates with extra records for each camera type:
 - AVT_Manta.template
 - Prosilica_GC.template
 - Baumer_TXG.template
 - JAI_6740.template
 - PGR_Flea3.template
 - Sony_CVC_EH6300.template

If you need to add another type of similar camera, read the \ref new_camera_sec section

\section inst_sec Installation
As this module is just a wrapper to aravis, it is not distributed with aravis, so you need to download and compile aravis in order to use the module. After downloading and untarring aravisGigE, either:
- Run the bash script <tt>install.sh</tt> in the root of the module, or
- Download and unzip the <a href="http://ftp.gnome.org/pub/GNOME/sources/aravis/0.1/aravis-0.1.15.tar.xz">aravis source</a> in the vendor directory of the module, renaming it to aravis

You are now ready to build the module.
- Modify configure/RELEASE
 - If you have glib >= 2.26 then comment out GLIBPREFIX, otherwise download and
   install glib and set that macro to the install prefix you used. If you are
   installing 64-bit then please make sure you configure and install glib with
   the option --libdir=$GLIBPREFIX/lib64
 - Set AREADETECTOR to the path of areaDetector 1-6 or 1-7beta
- Type make
- Run bin/linux-x86/arv-tool-0.2 to see GigE visible devices
- If your camera is not visible, check that it has an IP address on the same subnet
- If your camera is of a supported type, modify the example to use the correct database and screen, otherwise read the next section

\section new_camera_sec Adding a new camera
- Run <tt>bin/linux-x86/arv-tool-0.2 -n "<device_name>" genicam > "<camera_model>.xml"</tt> to download the genicam xml data from the selected device
  cameras
 - E.g. <tt>bin/linux-x86/arv-tool-0.2 -n "Allied Vision Technologies-50-0503318719" genicam > AVT_Manta_G125B.xml</tt>
- Make sure the generated file doesn't have a space at the start of it
- Run <tt>aravisGigEApp/src/makeDbAndEdl.py \<genicam_xml\> \<camera_name\></tt>
 - E.g. <tt>aravisGigEApp/src/makeDbAndEdl.py AVT_Manta_G125B.xml AVT_Manta</tt>
- This should then create:
 - <tt>aravisGigEApp/Db/\<camera_name\>.template</tt>
 - <tt>aravisGigEApp/opi/edl/\<camera_name\>.edl</tt>
 - <tt>aravisGigEApp/opi/edl/\<camera_name\>-features.edl</tt>
- Once you have decided on the most useful features, copy them from \<camera_name\>-features.edl and paste them into \<camera_name\>.edl in order to create a useful summary screen

\section bugs_sec Known Bugs
- Changing resolution or colour mode while acquiring may produce dropped frames, aravisGigE will allow it and inserts a 1 second sleep to try and make this operation robust, but it is better to stop the camera before changing resolution or colour mode
- <tt>pthread_attr_setstacksize error Invalid argument</tt> error messages are caused by glib and can be ignored
- Please follow the section on sysctl in <a href="http://www.ptgrey.com/support/kb/index.asp?a=4&q=354">this article</a> if you are getting large numbers of dropped frames
- If you start the IOC without a camera connected, you will not be able to get all its features if you reconnect to it later. This may be fixed in a later release

\section build_sec Build Instructions
- \subpage build_instructions_example

IOCs built using these build instructions are available in iocs/
*/
